Write-Output "Using Lucas Meyer's profile from dotfiles/powershell_profile"
New-Alias -Name act -Value .venv/Scripts/activate.ps1
New-Alias -Name codi -Value code-insiders

# function to install my programming toolbox
function itoolbox {
    pip install git+https://github.com/lucas-a-meyer/lucas-toolbox.git --upgrade
}
# function to link a .env to the generic one in my secrets folder
function Set-DotEnv {New-Item -ItemType SymbolicLink -Path ".env" -Target "C:\Users\lucasmeyer\secrets\env"}

# function to query cosmos job with one parameter: Status
function Cosmos-Jobs {
    param(
        [Parameter(Mandatory=$false)]
        [string]$State
    )
    if ($State -eq "" -or $State -eq $nul) {
        $j = Get-CosmosJob  vc://cosmos09/aiforgood.researchlab    
    }
    else {
        $j = Get-CosmosJob  vc://cosmos09/aiforgood.researchlab -State $State
    }
    $j    
}

# for azure cli completion
Register-ArgumentCompleter -Native -CommandName az -ScriptBlock {
    param($commandName, $wordToComplete, $cursorPosition)
    $completion_file = New-TemporaryFile
    $env:ARGCOMPLETE_USE_TEMPFILES = 1
    $env:_ARGCOMPLETE_STDOUT_FILENAME = $completion_file
    $env:COMP_LINE = $wordToComplete
    $env:COMP_POINT = $cursorPosition
    $env:_ARGCOMPLETE = 1
    $env:_ARGCOMPLETE_SUPPRESS_SPACE = 0
    $env:_ARGCOMPLETE_IFS = "`n"
    $env:_ARGCOMPLETE_SHELL = 'powershell'
    az 2>&1 | Out-Null
    Get-Content $completion_file | Sort-Object | ForEach-Object {
        [System.Management.Automation.CompletionResult]::new($_, $_, "ParameterValue", $_)
    }
    Remove-Item $completion_file, Env:\_ARGCOMPLETE_STDOUT_FILENAME, Env:\ARGCOMPLETE_USE_TEMPFILES, Env:\COMP_LINE, Env:\COMP_POINT, Env:\_ARGCOMPLETE, Env:\_ARGCOMPLETE_SUPPRESS_SPACE, Env:\_ARGCOMPLETE_IFS, Env:\_ARGCOMPLETE_SHELL
}


$PSVersionTable.PSVersion
